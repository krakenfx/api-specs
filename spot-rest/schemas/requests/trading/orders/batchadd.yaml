title: Add Standard Order Request Body
required:
  - nonce
  - orders
  - pair
type: object
properties:
  nonce:
    $ref: '../../../../partials/properties/nonce.yaml'
  orders:
   type: array
   items:
    required:
     - ordertype
     - type
     - volume
    type: object
    properties:
     userref:
         description: |
          User reference id
          `userref` is an optional user-specified integer id that can be associated with any number of orders. Many clients choose a `userref` corresponding to a unique integer id generated by their systems (e.g. a timestamp). However, because we don't enforce uniqueness on our side, it can also be used to easily group orders by pair, side, strategy, etc. This allows clients to more readily cancel or query information about orders in a particular group, with fewer API calls by using `userref` instead of our `txid`, where supported.
         type: integer
         format: int32
     cl_ord_id:
         description: |
          Adds an alphanumeric client order identifier which uniquely identifies an open order for each client. This field is mutually exclusive with <code>userref</code> parameter.
          
          The <code>cl_ord_id</code> parameter can be one of the following formats:
            * Long UUID: <code>6d1b345e-2821-40e2-ad83-4ecb18a06876</code> 32 hex characters separated with 4 dashes.
            * Short UUID: <code>da8e4ad59b78481c93e589746b0cf91f</code> 32 hex characters with no dashes.
            * Free text: <code>arb-20240509-00010</code> Free format ascii text up to 18 characters.
         type: string
     ordertype:
        description: |
            Order type
        type: string
        enum:
        - market
        - limit
        - iceberg
        - stop-loss
        - take-profit
        - stop-loss-limit
        - take-profit-limit
        - trailing-stop
        - trailing-stop-limit
        - settle-position
     type:
         description: Order direction (buy/sell)
         type: string
         enum:
          - buy
          - sell
     volume:
         description: |
          Order quantity in terms of the base asset
          > Note: Volume can be specified as `0` for closing margin orders to automatically fill the requisite quantity.
         type: string
     displayvol:
         description: |
            For `iceberg` orders only, it defines the quantity to show in the book while the rest of order quantity remains hidden. Minimum value is 1 / 15 of `volume`.
         type: string        
     price:
         description: |
            Price:
            * Limit price for `limit` and `iceberg` orders
            * Trigger price for `stop-loss`, `stop-loss-limit`, `take-profit`, and `take-profit-limit` orders
            
            Notes:
            * Relative Prices: Either `price` or `price2` can be preceded by `+`, `-`, or `#` to specify the order price as an offset relative to the last traded price. `+` adds the amount to, and `-` subtracts the amount from the last traded price. `#` will either add or subtract the amount to the last traded price, depending on the direction and order type used. Prices can also be suffixed with a `%` to signify the relative amount as a percentage, rather than an absolute price difference.

         type: string
     price2:
         description: |
            Secondary Price:
            * Limit price for `stop-loss-limit` and `take-profit-limit`

         type: string
     trigger:
         description: |
            Price signal used to trigger `stop-loss`, `stop-loss-limit`, `take-profit`, and `take-profit-limit` orders
            Notes:
            * To keep triggers serviceable, the last price will be used as fallback reference price during connectivity issues with external index feeds.

         type: string
         enum: 
          - "index"
          - "last"
         default: "last"
     leverage:
         description: | 
          Amount of leverage desired (default: none)
         type: string

     reduce_only:
         description: If `true`, order will only reduce a currently open position, not increase it or open a new position.
         type: boolean
         default: false

     stptype:
        description: | 
         Self trade prevention behaviour definition:
         * `cancel-newest` - if self trade is triggered, arriving order will be canceled
         * `cancel-oldest` - if self trade is triggered, resting order will be canceled
         * `cancel-both` - if self trade is triggered, both arriving and resting orders will be canceled

        type: string
        enum: 
        - "cancel-newest"
        - "cancel-oldest"
        - "cancel-both"
        default: "cancel-newest"

     oflags:
         $ref: '../../../../partials/properties/oflags.yaml'
     timeinforce:
         description: |
          Time-in-force of the order to specify how long it should remain in the order book before being cancelled. GTC (Good-'til-cancelled) is default if the parameter is omitted. IOC (immediate-or-cancel) will immediately execute the amount possible and cancel any remaining balance rather than resting in the book. GTD (good-'til-date), if specified, must coincide with a desired `expiretm`.
         type: string
         enum: 
          - GTC
          - IOC
          - GTD
         default: GTC
     starttm:
         description: |
          Scheduled start time, can be specified as an absolute timestamp or as a number of seconds in the future:
           * `0` now (default)
           * `+<n>` schedule start time <n> seconds from now
           * `<n>` = unix timestamp of start time
         type: string
     expiretm:
        description: |
          Expiry time on GTD orders can be set up to one month in future, it is specified as an absolute timestamp or as a number of seconds from now:
           * `0` no expiration (default)
           * `+<n>` = expire <n> seconds from now, minimum 5 seconds
           * `<n>` = unix timestamp of expiration time
        type: string
  pair:
    description: Asset pair `id` or `altname`
    type: string
    # example: XBTUSD
  asset_class:
    description: This parameter is required on requests for non-crypto pairs, i.e. use `tokenized_asset` for xstocks.
    type: string
    enum:
      - tokenized_asset
  deadline:
    type: string
    description: |
      RFC3339 timestamp (e.g. 2021-04-01T00:18:45Z) after which the matching engine should reject the new order request, in presence of latency or order queueing. min now() + 2 seconds, max now() + 60 seconds. 
#Defaults to 90 seconds if not specified.
  validate:
    type: boolean
    description: Validate inputs only. Do not submit order.
    default: false
example:
    nonce: 1695828490
    orders:
                    [
                      {
                        "close":
                          {
                            "ordertype": "stop-loss-limit",
                            "price": "37000",
                            "price2": "36000",
                          },
                        "ordertype": "limit",
                        "price": "40000",
                        "price2": "string",
                        "timeinforce": "GTC",
                        "type": "buy",
                        "cl_ord_id": "6d1b345e-2821-40e2-ad83-4ecb18a06876",
                        "volume": "1.2",
                      },
                      {
                        "ordertype": "limit",
                        "price": "42000",
                        "starttm": "string",
                        "timeinforce": "GTC",
                        "type": "sell",
                        "cl_ord_id": "da8e4ad59b78481c93e589746b0cf91",
                        "volume": "1.2",
                      },
                    ]
    pair: "BTC/USD"
    validate: false
    deadline: "2023-09-24T14:15:22Z"
